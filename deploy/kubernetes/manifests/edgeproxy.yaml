apiVersion: v1
kind: Service
metadata:
  name: edgeproxy
  namespace: libra
  labels:
    app: edgeproxy
  annotations:
    # use existed tencent cloud CLB to expose services
    service.kubernetes.io/tke-existed-lbid: lb-xxxxxxxx
spec:
  ports:
  - port: 80
    name: grpc
    nodePort: 30080
  type: NodePort # expose services
  selector:
    app: edgeproxy
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: edgeproxy
  namespace: libra
  labels:
    app: edgeproxy
spec:
  selector:
    matchLabels:
      app: edgeproxy
  replicas: 2
  template:
    metadata:
      labels:
        app: edgeproxy
    spec:
      containers:
      - name: proxy
        image: envoyproxy/envoy-alpine:v1.16-latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        - containerPort: 8000
        volumeMounts:
        - name: config
          mountPath: /etc/envoy
          readOnly: true
      - name: helper
        image: instrumentisto/rsync-ssh:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - name: config
          mountPath: /etc/envoy
        - name: source
          mountPath: /tmp/envoy
        command: ["/bin/sh","-c","while true; do rsync -dLptgo --delete /tmp/envoy/ /etc/envoy/ && sleep 1 || break; done"]
      initContainers:
      - name: init-helper
        image: instrumentisto/rsync-ssh:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: config
          mountPath: /etc/envoy
        - name: source
          mountPath: /tmp/envoy
        command: ["/bin/sh","-c","rsync -dLptgo --delete /tmp/envoy/ /etc/envoy/"]
      volumes:
      - name: config
        emptyDir: {}
      - name: source
        configMap:
          name: edgeproxy
---

