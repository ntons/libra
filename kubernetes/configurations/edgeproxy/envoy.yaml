# Configuring envoy as an edge proxy: https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge.html
# Configurating grpc-web: https://github.com/grpc/grpc-web/blob/master/net/grpc/gateway/examples/helloworld/envoy.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: edgeproxy
  namespace: libra
data:
  envoy.yaml: |
    node:
      id: edgeproxy
      cluster: cluster_edgeproxy
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
    dynamic_resources:
      cds_config:
        path: /etc/envoy/cds.yaml
      lds_config:
        path: /etc/envoy/lds.yaml
    overload_manager:
      refresh_interval: 0.25s
      resource_monitors:
      - name: "envoy.resource_monitors.fixed_heap"
        typed_config:
          "@type": type.googleapis.com/envoy.config.resource_monitor.fixed_heap.v2alpha.FixedHeapConfig
          max_heap_size_bytes: 1073741824 # 1 GiB, tune for your system.
      actions:
      - name: "envoy.overload_actions.shrink_heap"
        triggers:
        - name: "envoy.resource_monitors.fixed_heap"
          threshold:
            value: 0.95
      - name: "envoy.overload_actions.stop_accepting_requests"
        triggers:
          - name: "envoy.resource_monitors.fixed_heap"
            threshold:
              value: 0.98
    layered_runtime:
      layers:
      - name: static_layer_0
        static_layer:
          envoy:
            resource_limits:
              listener:
                listener_edgeproxy:
                  connection_limit: 10000
          overload:
            global_downstream_max_connections: 50000

  lds.yaml: |
    resources:
    - name: listener_edgeproxy
      "@type": type.googleapis.com/envoy.config.listener.v3.Listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 80
      per_connection_buffer_limit_bytes: 32768 # 32 KiB
      filter_chains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: listener_edgeproxy
            access_log:
              name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /dev/stdout
            use_remote_address: true
            common_http_protocol_options:
              idle_timeout: 3600s # 1 hour
              headers_with_underscores_action: REJECT_REQUEST
            http2_protocol_options:
              max_concurrent_streams: 100
              initial_stream_window_size: 65536 # 64 KiB
              initial_connection_window_size: 1048576 # 1 MiB
            # must be disabled for long-lived and streaming requests
            stream_idle_timeout: 300s # 5 mins, must be disabled for long-lived and streaming requests
            request_timeout: 300s # 5 mins, must be disabled for long-lived and streaming requests
            route_config:
              name: route_edgeproxy
              virtual_hosts:
              - name: route_edgeproxy
                domains:
                - "*"
                routes:
                - match:
                    prefix: '/libra.v1.User/Login'
                    grpc: {}
                  route:
                    cluster: cluster_librad_v1
                    idle_timeout: 15s # must be disabled for long-lived and streaming requests
                  typed_per_filter_config:
                    envoy.filters.http.ext_authz:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                      disabled: true
                - match:
                    safe_regex:
                      google_re2: {}
                      regex: '/libra\.v1\.(User|Role)/.*'
                    grpc: {}
                  route:
                    cluster: cluster_librad_v1
                    idle_timeout: 15s # must be disabled for long-lived and streaming requests
                - match:
                    prefix: '/helloworld.Greeter/'
                    grpc: {}
                  route:
                    cluster: cluster_greeter_server
                    idle_timeout: 15s # must be disabled for long-lived and streaming requests
            http_filters:
            - name: envoy.filters.http.ext_authz
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                grpc_service:
                  envoy_grpc:
                    cluster_name: cluster_librad_v1
                  timeout: 0.2s
                transport_api_version: V3
            - name: envoy.filters.http.router

  cds.yaml: |
    resources:
    - name: cluster_librad_v1
      "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
      connect_timeout: 0.2s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: cluster_librad_v1
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: librad-v0-0-1.libra.svc.cluster.local
                  port_value: 80
      http2_protocol_options:
        initial_stream_window_size: 65536 # 64 KiB
        initial_connection_window_size: 1048576 # 1 MiB
    - name: cluster_greeter_server
      "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
      connect_timeout: 0.2s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: cluster_greeter_server
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: greeter-server.examples.svc.cluster.local
                  port_value: 80
      http2_protocol_options:
        initial_stream_window_size: 65536 # 64 KiB
        initial_connection_window_size: 1048576 # 1 MiB

