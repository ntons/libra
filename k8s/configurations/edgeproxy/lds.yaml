# LDS for dynamic listener configuration

resources:
- name: listener_edgeproxy
  "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 10000
  per_connection_buffer_limit_bytes: 32768 # 32 KiB
  filter_chains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: listener_edgeproxy
        use_remote_address: true
        common_http_protocol_options:
          idle_timeout: 3600s
          headers_with_underscores_action: REJECT_REQUEST
        http2_protocol_options:
          max_concurrent_streams: 100
          initial_stream_window_size: 65536 # 64 KiB
          initial_connection_window_size: 1048576 # 1 MiB
        # must be disabled for long-lived and streaming requests
        stream_idle_timeout: 0s
        request_timeout: 0s
        route_config:
          name: route_edgeproxy
          virtual_hosts:
          - name: route_edgeproxy
            domains:
            - "*"
            routes:
            - match: # http access to portal
                prefix: /v1/account/
              route:
                cluster: cluster_apiproxy
                timeout: 1s
              typed_per_filter_config:
                envoy.filters.http.ext_authz:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                  disabled: true
            - match: # grpc access to portal
                prefix: /libra.v1.Account/
                grpc: {}
              route:
                cluster: cluster_apiproxy
                timeout: 1s # unary
              typed_per_filter_config:
                envoy.filters.http.ext_authz:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                  disabled: true
            - match: # grpc access to gateway
                path: /libra.v1.Gateway/Connect
                grpc: {}
              route:
                cluster: cluster_apiproxy
                timeout: 0s # stream
            - match: # grpc access to echo
                path: /libra.v1.Echo/
                grpc: {}
              route:
                cluster: cluster_echo_v1
                timeout: 0s # stream
            cors:
              allow_origin_string_match:
              - prefix: "*"
              allow_methods: GET, PUT, DELETE, POST, OPTIONS
              allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
              max_age: "1728000"
              expose_headers: custom-header-1,grpc-status,grpc-message

        http_filters:
          # grpc-web configuration:
          # https://github.com/grpc/grpc-web/blob/master/net/grpc/gateway/examples/helloworld/envoy.yaml
        - name: envoy.filters.http.grpc_web
        - name: envoy.filters.http.cors
        - name: envoy.filters.http.ext_authz
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
            grpc_service:
              envoy_grpc:
                cluster_name: cluster_apiproxy
              timeout: 0.2s
        - name: envoy.filters.http.router

