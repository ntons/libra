# Configuring envoy as an edge proxy:
# https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge.html

listeners:
- name: listener_edge_ingress
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 10000
  per_connection_buffer_limit_bytes: 32768 # 32 KiB
  filter_chains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: listener_edge_ingress
        use_remote_address: true
        common_http_protocol_options:
          idle_timeout: 3600s
          headers_with_underscores_action: REJECT_REQUEST
        http2_protocol_options:
          max_concurrent_streams: 100
          initial_stream_window_size: 65536 # 64 KiB
          initial_connection_window_size: 1048576 # 1 MiB
        # must be disabled for long-lived and streaming requests
        stream_idle_timeout: 0s
        request_timeout: 0s
        rds:
          config_source:
            ads: {}
            resource_api_version: V3
          route_config_name: route_edge_ingress
        http_filters:
        - name: envoy.filters.http.ext_authz
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
            grpc_service:
              envoy_grpc:
                cluster_name: cluster_pt
              timeout: 0.2s
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

routes:
- name: route_edge_ingress
  virtual_hosts:
  - name: route_edge_ingress
    domains:
    - "*"
    routes:
    - match:
        prefix: /libra.ptapi.v1.Account/
        grpc: {}
      route:
        cluster: cluster_pt
        timeout: 1s
      typed_per_filter_config:
        envoy.filters.http.ext_authz:
          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
          disabled: true
    - match:
        prefix: /libra.gwapi.v1.Access/
        grpc: {}
      route:
        cluster: cluster_gw
        timeout: 0s
        hash_policy:
        - header:
            header_name: x-libra-role-id
    {% for app in apps %}
    - match:
        prefix: {{ app.route_prefix }}
        grpc: {}
      route:
        cluster: cluster_app_{{ app.name }}
        timeout: 0s
        {% if app.hash_header %}
        hash_policy:
        - header:
            header_name: {{ app.hash_header }}
        {% endif %}
    {% endfor %}

clusters:
- name: cluster_gw
  connect_timeout: 1s
  per_connection_buffer_limit_bytes: 32768 # 32 KiB
  http2_protocol_options:
    initial_stream_window_size: 65536 # 64 KiB
    initial_connection_window_size: 1048576 # 1 MiB
  type: EDS
  lb_policy: MAGLEV
  eds_cluster_config:
    eds_config:
      ads: {}
      resource_api_version: V3
  health_checks:
  - timeout: 0.2s
    interval: 1s
    healthy_threshold: 1
    unhealthy_threshold: 3
    grpc_health_check: {}

- name: cluster_pt
  connect_timeout: 1s
  per_connection_buffer_limit_bytes: 32768 # 32 KiB
  http2_protocol_options:
    initial_stream_window_size: 65536 # 64 KiB
    initial_connection_window_size: 1048576 # 1 MiB
  type: EDS
  lb_policy: ROUND_ROBIN
  eds_cluster_config:
    eds_config:
      ads: {}
      resource_api_version: V3
  health_checks:
  - timeout: 0.2s
    interval: 1s
    healthy_threshold: 1
    unhealthy_threshold: 3
    grpc_health_check: {}

{% for app in apps %}
- name: cluster_app_{{ app.name }}
  connect_timeout: 1s
  per_connection_buffer_limit_bytes: 32768 # 32 KiB
  http2_protocol_options: 
    initial_stream_window_size: 65536 # 64 KiB
    initial_connection_window_size: 1048576 # 1 MiB
  type: EDS
  lb_policy: {{ app.lb_policy|default:'ROUND_ROBIN' }}
  eds_cluster_config:
    eds_config:
      ads: {}
      resource_api_version: V3
  health_checks:
  - timeout: 0.2s
    interval: 1s
    healthy_threshold: 1
    unhealthy_threshold: 3
    grpc_health_check: {}
{% endfor %}

runtimes:
- name: runtime_edge
  layer:
    envoy:
      resource_limits:
        listener:
          listener_edge_ingress:
            connection_limit: 10000
    overload:
      global_downstream_max_connections: 50000

