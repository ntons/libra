# standalone deployment

{% set SERVER_ROUTE_PREFIX  = 'SERVER_ROUTE_PREFIX' |env %}
{% set SERVER_ADDR          = 'SERVER_ADDR'         |env %}
{% set SERVER_PORT          = 'SERVER_PORT'         |env %}

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8000

static_resources:
  listeners:
  - name: listener_edge_ingress
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    per_connection_buffer_limit_bytes: 32768 # 32 KiB
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          #"@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: listener_edge_ingress
          use_remote_address: true
          common_http_protocol_options:
            idle_timeout: 3600s
            headers_with_underscores_action: REJECT_REQUEST
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536 # 64 KiB
            initial_connection_window_size: 1048576 # 1 MiB
          # must be disabled for long-lived and streaming requests
          stream_idle_timeout: 0s
          request_timeout: 0s
          route_config:
            name: route_edge_ingress
            virtual_hosts:
            - name: route_edge_ingress
              domains:
              - "*"
              routes:
              - match: # http access to pt
                  prefix: /libra/ptapi/v1/account/
                route:
                  cluster: cluster_libra
                  timeout: 1s
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true
              - match: # grpc access to pt
                  prefix: /libra.ptapi.v1.Account/
                  grpc: {}
                route:
                  cluster: cluster_libra
                  timeout: 1s # unary
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true
              - match: # grpc access to gw
                  prefix: /libra.gwapi.v1.Access/
                  grpc: {}
                route:
                  cluster: cluster_libra
                  timeout: 0s # stream
              - match: # grpc access to app
                  prefix: {{ 'APP_ROUTE_PREFIX'|env }}
                  grpc: {}
                route:
                  cluster: cluster_app
                  timeout: 0s
          http_filters:
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              grpc_service:
                envoy_grpc:
                  cluster_name: cluster_libra
                timeout: 0.2s
          - name: envoy.filters.http.router
            typed_config: {}

  - name: listener_libra
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          #"@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: listener_libra
          route_config:
            name: route_libra
            virtual_hosts:
            - name: route_libra
              domains:
              - "*"
              routes:
              - match:
                  prefix: /
                  grpc: {}
                route:
                  cluster: cluster_libra
                  timeout: 0s
          http_filters:
          - name: envoy.filters.http.router
            typed_config: {}

  - name: listener_redis_egress
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 6379
    filter_chains:
    - filters:
      - name: envoy.filters.network.redis_proxy
        typed_config:
          #"@type": type.googleapis.com/envoy.config.filter.network.redis_proxy.v2.RedisProxy
          "@type": type.googleapis.com/envoy.extensions.filters.network.redis_proxy.v3.RedisProxy
          stat_prefix: listener_redis_egress
          settings:
            op_timeout: 5s
            enable_hashtagging: true
          prefix_routes:
            catch_all_route:
              cluster: cluster_redis

  - name: listener_mongo_egress
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 27017
    filter_chains:
    - filters:
      - name: envoy.filters.network.mongo_proxy
        typed_config:
          #"@type": type.googleapis.com/envoy.config.filter.network.mongo_proxy.v2.MongoProxy
          "@type": type.googleapis.com/envoy.extensions.filters.network.mongo_proxy.v3.MongoProxy
          stat_prefix: listener_mongo_egress
          #access_log: "/var/log/envoy/mongo_access.log"
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          #"@type": type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: listener_mongo_egress
          cluster: cluster_mongo

  clusters:
  - name: cluster_redis
    connect_timeout: 0.2s
    type: STRICT_DNS
    lb_policy: MAGLEV
    load_assignment:
      cluster_name: cluster_redis
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: libra-redis
                port_value: 6379
    #health_checks:

  - name: cluster_mongo
    connect_timeout: 0.2s
    type: STRICT_DNS
    lb_policy: MAGLEV
    load_assignment:
      cluster_name: cluster_mongo
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: libra-mongo
                port_value: 27017
    #health_checks:

  - name: cluster_app
    connect_timeout: 1s
    per_connection_buffer_limit_bytes: 32768 # 32 KiB
    http2_protocol_options: {}
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: cluster_app
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ 'APP_ADDR'|env }}
                port_value: {{ 'APP_PORT'|env }}
    health_checks:
    - timeout: 0.2s
      interval: 1s
      healthy_threshold: 1
      unhealthy_threshold: 3
      grpc_health_check: {}

  - name: cluster_libra
    connect_timeout: 0.2s
    http2_protocol_options: {}
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: cluster_libra
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 80
    health_checks:
    - timeout: 0.2s
      interval: 1s
      healthy_threshold: 1
      unhealthy_threshold: 3
      grpc_health_check: {}

overload_manager:
  refresh_interval: 0.25s
  resource_monitors:
  - name: "envoy.resource_monitors.fixed_heap"
    typed_config:
      "@type": type.googleapis.com/envoy.config.resource_monitor.fixed_heap.v2alpha.FixedHeapConfig
      # TODO: Tune for your system.
      max_heap_size_bytes: 2147483648 # 2 GiB
  actions:
  - name: "envoy.overload_actions.shrink_heap"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.95
  - name: "envoy.overload_actions.stop_accepting_requests"
    triggers:
      - name: "envoy.resource_monitors.fixed_heap"
        threshold:
          value: 0.98

layered_runtime:
  layers:
  - name: runtime_edge
    static_layer:
      envoy:
        resource_limits:
          listener:
            listener_edge_ingress:
              connection_limit: 10000
      overload:
        global_downstream_max_connections: 50000

